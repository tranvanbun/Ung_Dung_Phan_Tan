generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ======================
// B·∫¢NG USER (NG∆Ø·ªúI THU√ä)
// ======================
model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String?
  phone         String?
  signaturePath String?  // üîπ th√™m tr∆∞·ªùng ch·ªØ k√Ω
  createdAt     DateTime @default(now())
}

// ======================
// B·∫¢NG LANDLORD (CH·ª¶ TR·ªå)
// ======================
model Landlord {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String?
  phone         String?
  address       String?
  signaturePath String?  // üîπ ƒë√£ c√≥ ch·ªØ k√Ω
  createdAt     DateTime @default(now())
  posts         Post[]
}

// ======================
// B·∫¢NG ADMIN
// ======================
model Admin {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String?
  createdAt  DateTime @default(now())
  isSuper    Boolean  @default(false)
}

// ======================
// B·∫¢NG B√ÄI ƒêƒÇNG
// ======================
model Post {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  price       Float
  location    String
  landlordId  Int
  landlord    Landlord   @relation(fields: [landlordId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
