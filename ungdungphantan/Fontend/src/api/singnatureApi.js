import axios from "axios";

/**
 * üì§ Upload ch·ªØ k√Ω ng∆∞·ªùi d√πng l√™n Cloudinary
 * @param {File} file - ·∫¢nh ch·ªØ k√Ω (png/jpg/jpeg)
 * @param {number} id - ID ng∆∞·ªùi d√πng
 * @param {string} role - Vai tr√≤ ("USER" ho·∫∑c "LANDLORD")
 * @returns {Promise<object>} - K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ backend
 */
export const uploadSignature = async (file, id, role) => {
  try {
    if (!file) throw new Error("Kh√¥ng c√≥ file ch·ªØ k√Ω");
    if (!id || !role) throw new Error("Thi·∫øu th√¥ng tin ng∆∞·ªùi d√πng");

    const formData = new FormData();
    formData.append("signature", file);
    formData.append("id", id);
    formData.append("role", role);

    const res = await axios.post("http://localhost:3000/signatures/upload", formData, {
      headers: { "Content-Type": "multipart/form-data" },
    });

    return res.data; // Tr·∫£ v·ªÅ object { message, signatureUrl, updated }
  } catch (error) {
    console.error("‚ùå L·ªói upload ch·ªØ k√Ω:", error);
    throw error.response?.data || { message: "Upload ch·ªØ k√Ω th·∫•t b·∫°i" };
  }
};
